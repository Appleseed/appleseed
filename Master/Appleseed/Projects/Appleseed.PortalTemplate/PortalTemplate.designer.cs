#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Appleseed.PortalTemplate
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="TravelAgency")]
	public partial class PortalTemplateDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertrb_Portals(rb_Portals instance);
    partial void Updaterb_Portals(rb_Portals instance);
    partial void Deleterb_Portals(rb_Portals instance);
    partial void Insertrb_Modules(rb_Modules instance);
    partial void Updaterb_Modules(rb_Modules instance);
    partial void Deleterb_Modules(rb_Modules instance);
    partial void Insertrb_Pages(rb_Pages instance);
    partial void Updaterb_Pages(rb_Pages instance);
    partial void Deleterb_Pages(rb_Pages instance);
    partial void Insertrb_ModuleSettings(rb_ModuleSettings instance);
    partial void Updaterb_ModuleSettings(rb_ModuleSettings instance);
    partial void Deleterb_ModuleSettings(rb_ModuleSettings instance);
    partial void Insertrb_PortalSettings(rb_PortalSettings instance);
    partial void Updaterb_PortalSettings(rb_PortalSettings instance);
    partial void Deleterb_PortalSettings(rb_PortalSettings instance);
    partial void Insertrb_TabSetting(rb_TabSetting instance);
    partial void Updaterb_TabSetting(rb_TabSetting instance);
    partial void Deleterb_TabSetting(rb_TabSetting instance);
    partial void Insertrb_HtmlText(rb_HtmlText instance);
    partial void Updaterb_HtmlText(rb_HtmlText instance);
    partial void Deleterb_HtmlText(rb_HtmlText instance);
    partial void Insertrb_ModuleDefinition(rb_ModuleDefinition instance);
    partial void Updaterb_ModuleDefinition(rb_ModuleDefinition instance);
    partial void Deleterb_ModuleDefinition(rb_ModuleDefinition instance);
    partial void Insertrb_GeneralModuleDefinition(rb_GeneralModuleDefinition instance);
    partial void Updaterb_GeneralModuleDefinition(rb_GeneralModuleDefinition instance);
    partial void Deleterb_GeneralModuleDefinition(rb_GeneralModuleDefinition instance);
    partial void Insertrb_HtmlText_st(rb_HtmlText_st instance);
    partial void Updaterb_HtmlText_st(rb_HtmlText_st instance);
    partial void Deleterb_HtmlText_st(rb_HtmlText_st instance);
    #endregion
		
		public PortalTemplateDataContext() : 
				base(global::Appleseed.PortalTemplate.Properties.Settings.Default.AppleseedConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public PortalTemplateDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PortalTemplateDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PortalTemplateDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PortalTemplateDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<rb_Portals> rb_Portals
		{
			get
			{
				return this.GetTable<rb_Portals>();
			}
		}
		
		public System.Data.Linq.Table<rb_Modules> rb_Modules
		{
			get
			{
				return this.GetTable<rb_Modules>();
			}
		}
		
		public System.Data.Linq.Table<rb_Pages> rb_Pages
		{
			get
			{
				return this.GetTable<rb_Pages>();
			}
		}
		
		public System.Data.Linq.Table<rb_ModuleSettings> rb_ModuleSettings
		{
			get
			{
				return this.GetTable<rb_ModuleSettings>();
			}
		}
		
		public System.Data.Linq.Table<rb_PortalSettings> rb_PortalSettings
		{
			get
			{
				return this.GetTable<rb_PortalSettings>();
			}
		}
		
		public System.Data.Linq.Table<rb_TabSetting> rb_TabSettings
		{
			get
			{
				return this.GetTable<rb_TabSetting>();
			}
		}
		
		public System.Data.Linq.Table<rb_HtmlText> rb_HtmlTexts
		{
			get
			{
				return this.GetTable<rb_HtmlText>();
			}
		}
		
		public System.Data.Linq.Table<rb_ModuleDefinition> rb_ModuleDefinitions
		{
			get
			{
				return this.GetTable<rb_ModuleDefinition>();
			}
		}
		
		public System.Data.Linq.Table<rb_GeneralModuleDefinition> rb_GeneralModuleDefinitions
		{
			get
			{
				return this.GetTable<rb_GeneralModuleDefinition>();
			}
		}
		
		public System.Data.Linq.Table<rb_HtmlText_st> rb_HtmlText_sts
		{
			get
			{
				return this.GetTable<rb_HtmlText_st>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.rb_Portals")]
	public partial class rb_Portals : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PortalID;
		
		private string _PortalAlias;
		
		private string _PortalName;
		
		private string _PortalPath;
		
		private bool _AlwaysShowEditButton;
		
		private EntitySet<rb_Pages> _rb_Pages;
		
		private EntitySet<rb_PortalSettings> _rb_PortalSettings;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPortalIDChanging(int value);
    partial void OnPortalIDChanged();
    partial void OnPortalAliasChanging(string value);
    partial void OnPortalAliasChanged();
    partial void OnPortalNameChanging(string value);
    partial void OnPortalNameChanged();
    partial void OnPortalPathChanging(string value);
    partial void OnPortalPathChanged();
    partial void OnAlwaysShowEditButtonChanging(bool value);
    partial void OnAlwaysShowEditButtonChanged();
    #endregion
		
		public rb_Portals()
		{
			this._rb_Pages = new EntitySet<rb_Pages>(new Action<rb_Pages>(this.attach_rb_Pages), new Action<rb_Pages>(this.detach_rb_Pages));
			this._rb_PortalSettings = new EntitySet<rb_PortalSettings>(new Action<rb_PortalSettings>(this.attach_rb_PortalSettings), new Action<rb_PortalSettings>(this.detach_rb_PortalSettings));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortalID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PortalID
		{
			get
			{
				return this._PortalID;
			}
			set
			{
				if ((this._PortalID != value))
				{
					this.OnPortalIDChanging(value);
					this.SendPropertyChanging();
					this._PortalID = value;
					this.SendPropertyChanged("PortalID");
					this.OnPortalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortalAlias", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string PortalAlias
		{
			get
			{
				return this._PortalAlias;
			}
			set
			{
				if ((this._PortalAlias != value))
				{
					this.OnPortalAliasChanging(value);
					this.SendPropertyChanging();
					this._PortalAlias = value;
					this.SendPropertyChanged("PortalAlias");
					this.OnPortalAliasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortalName", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string PortalName
		{
			get
			{
				return this._PortalName;
			}
			set
			{
				if ((this._PortalName != value))
				{
					this.OnPortalNameChanging(value);
					this.SendPropertyChanging();
					this._PortalName = value;
					this.SendPropertyChanged("PortalName");
					this.OnPortalNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortalPath", DbType="NVarChar(128)")]
		public string PortalPath
		{
			get
			{
				return this._PortalPath;
			}
			set
			{
				if ((this._PortalPath != value))
				{
					this.OnPortalPathChanging(value);
					this.SendPropertyChanging();
					this._PortalPath = value;
					this.SendPropertyChanged("PortalPath");
					this.OnPortalPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlwaysShowEditButton", DbType="Bit NOT NULL")]
		public bool AlwaysShowEditButton
		{
			get
			{
				return this._AlwaysShowEditButton;
			}
			set
			{
				if ((this._AlwaysShowEditButton != value))
				{
					this.OnAlwaysShowEditButtonChanging(value);
					this.SendPropertyChanging();
					this._AlwaysShowEditButton = value;
					this.SendPropertyChanged("AlwaysShowEditButton");
					this.OnAlwaysShowEditButtonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="rb_Portals_rb_Pages", Storage="_rb_Pages", ThisKey="PortalID", OtherKey="PortalID")]
		public EntitySet<rb_Pages> rb_Pages
		{
			get
			{
				return this._rb_Pages;
			}
			set
			{
				this._rb_Pages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="rb_Portals_rb_PortalSettings", Storage="_rb_PortalSettings", ThisKey="PortalID", OtherKey="PortalID")]
		public EntitySet<rb_PortalSettings> rb_PortalSettings
		{
			get
			{
				return this._rb_PortalSettings;
			}
			set
			{
				this._rb_PortalSettings.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_rb_Pages(rb_Pages entity)
		{
			this.SendPropertyChanging();
			entity.rb_Portals = this;
		}
		
		private void detach_rb_Pages(rb_Pages entity)
		{
			this.SendPropertyChanging();
			entity.rb_Portals = null;
		}
		
		private void attach_rb_PortalSettings(rb_PortalSettings entity)
		{
			this.SendPropertyChanging();
			entity.rb_Portals = this;
		}
		
		private void detach_rb_PortalSettings(rb_PortalSettings entity)
		{
			this.SendPropertyChanging();
			entity.rb_Portals = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.rb_Modules")]
	public partial class rb_Modules : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ModuleID;
		
		private int _TabID;
		
		private int _ModuleDefID;
		
		private int _ModuleOrder;
		
		private string _PaneName;
		
		private string _ModuleTitle;
		
		private string _AuthorizedEditRoles;
		
		private string _AuthorizedViewRoles;
		
		private string _AuthorizedAddRoles;
		
		private string _AuthorizedDeleteRoles;
		
		private string _AuthorizedPropertiesRoles;
		
		private int _CacheTime;
		
		private System.Nullable<bool> _ShowMobile;
		
		private string _AuthorizedPublishingRoles;
		
		private System.Nullable<bool> _NewVersion;
		
		private System.Nullable<bool> _SupportWorkflow;
		
		private string _AuthorizedApproveRoles;
		
		private System.Nullable<byte> _WorkflowState;
		
		private System.Nullable<System.DateTime> _LastModified;
		
		private string _LastEditor;
		
		private System.Nullable<System.DateTime> _StagingLastModified;
		
		private string _StagingLastEditor;
		
		private System.Nullable<bool> _SupportCollapsable;
		
		private System.Nullable<bool> _ShowEveryWhere;
		
		private string _AuthorizedMoveModuleRoles;
		
		private string _AuthorizedDeleteModuleRoles;
		
		private EntitySet<rb_ModuleSettings> _rb_ModuleSettings;
		
		private EntityRef<rb_Pages> _rb_Page;
		
		private EntityRef<rb_ModuleDefinition> _rb_ModuleDefinition;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnModuleIDChanging(int value);
    partial void OnModuleIDChanged();
    partial void OnTabIDChanging(int value);
    partial void OnTabIDChanged();
    partial void OnModuleDefIDChanging(int value);
    partial void OnModuleDefIDChanged();
    partial void OnModuleOrderChanging(int value);
    partial void OnModuleOrderChanged();
    partial void OnPaneNameChanging(string value);
    partial void OnPaneNameChanged();
    partial void OnModuleTitleChanging(string value);
    partial void OnModuleTitleChanged();
    partial void OnAuthorizedEditRolesChanging(string value);
    partial void OnAuthorizedEditRolesChanged();
    partial void OnAuthorizedViewRolesChanging(string value);
    partial void OnAuthorizedViewRolesChanged();
    partial void OnAuthorizedAddRolesChanging(string value);
    partial void OnAuthorizedAddRolesChanged();
    partial void OnAuthorizedDeleteRolesChanging(string value);
    partial void OnAuthorizedDeleteRolesChanged();
    partial void OnAuthorizedPropertiesRolesChanging(string value);
    partial void OnAuthorizedPropertiesRolesChanged();
    partial void OnCacheTimeChanging(int value);
    partial void OnCacheTimeChanged();
    partial void OnShowMobileChanging(System.Nullable<bool> value);
    partial void OnShowMobileChanged();
    partial void OnAuthorizedPublishingRolesChanging(string value);
    partial void OnAuthorizedPublishingRolesChanged();
    partial void OnNewVersionChanging(System.Nullable<bool> value);
    partial void OnNewVersionChanged();
    partial void OnSupportWorkflowChanging(System.Nullable<bool> value);
    partial void OnSupportWorkflowChanged();
    partial void OnAuthorizedApproveRolesChanging(string value);
    partial void OnAuthorizedApproveRolesChanged();
    partial void OnWorkflowStateChanging(System.Nullable<byte> value);
    partial void OnWorkflowStateChanged();
    partial void OnLastModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedChanged();
    partial void OnLastEditorChanging(string value);
    partial void OnLastEditorChanged();
    partial void OnStagingLastModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnStagingLastModifiedChanged();
    partial void OnStagingLastEditorChanging(string value);
    partial void OnStagingLastEditorChanged();
    partial void OnSupportCollapsableChanging(System.Nullable<bool> value);
    partial void OnSupportCollapsableChanged();
    partial void OnShowEveryWhereChanging(System.Nullable<bool> value);
    partial void OnShowEveryWhereChanged();
    partial void OnAuthorizedMoveModuleRolesChanging(string value);
    partial void OnAuthorizedMoveModuleRolesChanged();
    partial void OnAuthorizedDeleteModuleRolesChanging(string value);
    partial void OnAuthorizedDeleteModuleRolesChanged();
    #endregion
		
		public rb_Modules()
		{
			this._rb_ModuleSettings = new EntitySet<rb_ModuleSettings>(new Action<rb_ModuleSettings>(this.attach_rb_ModuleSettings), new Action<rb_ModuleSettings>(this.detach_rb_ModuleSettings));
			this._rb_Page = default(EntityRef<rb_Pages>);
			this._rb_ModuleDefinition = default(EntityRef<rb_ModuleDefinition>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModuleID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ModuleID
		{
			get
			{
				return this._ModuleID;
			}
			set
			{
				if ((this._ModuleID != value))
				{
					this.OnModuleIDChanging(value);
					this.SendPropertyChanging();
					this._ModuleID = value;
					this.SendPropertyChanged("ModuleID");
					this.OnModuleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TabID", DbType="Int NOT NULL")]
		public int TabID
		{
			get
			{
				return this._TabID;
			}
			set
			{
				if ((this._TabID != value))
				{
					if (this._rb_Page.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTabIDChanging(value);
					this.SendPropertyChanging();
					this._TabID = value;
					this.SendPropertyChanged("TabID");
					this.OnTabIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModuleDefID", DbType="Int NOT NULL")]
		public int ModuleDefID
		{
			get
			{
				return this._ModuleDefID;
			}
			set
			{
				if ((this._ModuleDefID != value))
				{
					if (this._rb_ModuleDefinition.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnModuleDefIDChanging(value);
					this.SendPropertyChanging();
					this._ModuleDefID = value;
					this.SendPropertyChanged("ModuleDefID");
					this.OnModuleDefIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModuleOrder", DbType="Int NOT NULL")]
		public int ModuleOrder
		{
			get
			{
				return this._ModuleOrder;
			}
			set
			{
				if ((this._ModuleOrder != value))
				{
					this.OnModuleOrderChanging(value);
					this.SendPropertyChanging();
					this._ModuleOrder = value;
					this.SendPropertyChanged("ModuleOrder");
					this.OnModuleOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaneName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string PaneName
		{
			get
			{
				return this._PaneName;
			}
			set
			{
				if ((this._PaneName != value))
				{
					this.OnPaneNameChanging(value);
					this.SendPropertyChanging();
					this._PaneName = value;
					this.SendPropertyChanged("PaneName");
					this.OnPaneNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModuleTitle", DbType="NVarChar(256)")]
		public string ModuleTitle
		{
			get
			{
				return this._ModuleTitle;
			}
			set
			{
				if ((this._ModuleTitle != value))
				{
					this.OnModuleTitleChanging(value);
					this.SendPropertyChanging();
					this._ModuleTitle = value;
					this.SendPropertyChanged("ModuleTitle");
					this.OnModuleTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthorizedEditRoles", DbType="NVarChar(256)")]
		public string AuthorizedEditRoles
		{
			get
			{
				return this._AuthorizedEditRoles;
			}
			set
			{
				if ((this._AuthorizedEditRoles != value))
				{
					this.OnAuthorizedEditRolesChanging(value);
					this.SendPropertyChanging();
					this._AuthorizedEditRoles = value;
					this.SendPropertyChanged("AuthorizedEditRoles");
					this.OnAuthorizedEditRolesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthorizedViewRoles", DbType="NVarChar(256)")]
		public string AuthorizedViewRoles
		{
			get
			{
				return this._AuthorizedViewRoles;
			}
			set
			{
				if ((this._AuthorizedViewRoles != value))
				{
					this.OnAuthorizedViewRolesChanging(value);
					this.SendPropertyChanging();
					this._AuthorizedViewRoles = value;
					this.SendPropertyChanged("AuthorizedViewRoles");
					this.OnAuthorizedViewRolesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthorizedAddRoles", DbType="NVarChar(256)")]
		public string AuthorizedAddRoles
		{
			get
			{
				return this._AuthorizedAddRoles;
			}
			set
			{
				if ((this._AuthorizedAddRoles != value))
				{
					this.OnAuthorizedAddRolesChanging(value);
					this.SendPropertyChanging();
					this._AuthorizedAddRoles = value;
					this.SendPropertyChanged("AuthorizedAddRoles");
					this.OnAuthorizedAddRolesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthorizedDeleteRoles", DbType="NVarChar(256)")]
		public string AuthorizedDeleteRoles
		{
			get
			{
				return this._AuthorizedDeleteRoles;
			}
			set
			{
				if ((this._AuthorizedDeleteRoles != value))
				{
					this.OnAuthorizedDeleteRolesChanging(value);
					this.SendPropertyChanging();
					this._AuthorizedDeleteRoles = value;
					this.SendPropertyChanged("AuthorizedDeleteRoles");
					this.OnAuthorizedDeleteRolesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthorizedPropertiesRoles", DbType="NVarChar(256)")]
		public string AuthorizedPropertiesRoles
		{
			get
			{
				return this._AuthorizedPropertiesRoles;
			}
			set
			{
				if ((this._AuthorizedPropertiesRoles != value))
				{
					this.OnAuthorizedPropertiesRolesChanging(value);
					this.SendPropertyChanging();
					this._AuthorizedPropertiesRoles = value;
					this.SendPropertyChanged("AuthorizedPropertiesRoles");
					this.OnAuthorizedPropertiesRolesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CacheTime", DbType="Int NOT NULL")]
		public int CacheTime
		{
			get
			{
				return this._CacheTime;
			}
			set
			{
				if ((this._CacheTime != value))
				{
					this.OnCacheTimeChanging(value);
					this.SendPropertyChanging();
					this._CacheTime = value;
					this.SendPropertyChanged("CacheTime");
					this.OnCacheTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowMobile", DbType="Bit")]
		public System.Nullable<bool> ShowMobile
		{
			get
			{
				return this._ShowMobile;
			}
			set
			{
				if ((this._ShowMobile != value))
				{
					this.OnShowMobileChanging(value);
					this.SendPropertyChanging();
					this._ShowMobile = value;
					this.SendPropertyChanged("ShowMobile");
					this.OnShowMobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthorizedPublishingRoles", DbType="NVarChar(256)")]
		public string AuthorizedPublishingRoles
		{
			get
			{
				return this._AuthorizedPublishingRoles;
			}
			set
			{
				if ((this._AuthorizedPublishingRoles != value))
				{
					this.OnAuthorizedPublishingRolesChanging(value);
					this.SendPropertyChanging();
					this._AuthorizedPublishingRoles = value;
					this.SendPropertyChanged("AuthorizedPublishingRoles");
					this.OnAuthorizedPublishingRolesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewVersion", DbType="Bit")]
		public System.Nullable<bool> NewVersion
		{
			get
			{
				return this._NewVersion;
			}
			set
			{
				if ((this._NewVersion != value))
				{
					this.OnNewVersionChanging(value);
					this.SendPropertyChanging();
					this._NewVersion = value;
					this.SendPropertyChanged("NewVersion");
					this.OnNewVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupportWorkflow", DbType="Bit")]
		public System.Nullable<bool> SupportWorkflow
		{
			get
			{
				return this._SupportWorkflow;
			}
			set
			{
				if ((this._SupportWorkflow != value))
				{
					this.OnSupportWorkflowChanging(value);
					this.SendPropertyChanging();
					this._SupportWorkflow = value;
					this.SendPropertyChanged("SupportWorkflow");
					this.OnSupportWorkflowChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthorizedApproveRoles", DbType="NVarChar(256)")]
		public string AuthorizedApproveRoles
		{
			get
			{
				return this._AuthorizedApproveRoles;
			}
			set
			{
				if ((this._AuthorizedApproveRoles != value))
				{
					this.OnAuthorizedApproveRolesChanging(value);
					this.SendPropertyChanging();
					this._AuthorizedApproveRoles = value;
					this.SendPropertyChanged("AuthorizedApproveRoles");
					this.OnAuthorizedApproveRolesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkflowState", DbType="TinyInt")]
		public System.Nullable<byte> WorkflowState
		{
			get
			{
				return this._WorkflowState;
			}
			set
			{
				if ((this._WorkflowState != value))
				{
					this.OnWorkflowStateChanging(value);
					this.SendPropertyChanging();
					this._WorkflowState = value;
					this.SendPropertyChanged("WorkflowState");
					this.OnWorkflowStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModified", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastModified
		{
			get
			{
				return this._LastModified;
			}
			set
			{
				if ((this._LastModified != value))
				{
					this.OnLastModifiedChanging(value);
					this.SendPropertyChanging();
					this._LastModified = value;
					this.SendPropertyChanged("LastModified");
					this.OnLastModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastEditor", DbType="NVarChar(256)")]
		public string LastEditor
		{
			get
			{
				return this._LastEditor;
			}
			set
			{
				if ((this._LastEditor != value))
				{
					this.OnLastEditorChanging(value);
					this.SendPropertyChanging();
					this._LastEditor = value;
					this.SendPropertyChanged("LastEditor");
					this.OnLastEditorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StagingLastModified", DbType="DateTime")]
		public System.Nullable<System.DateTime> StagingLastModified
		{
			get
			{
				return this._StagingLastModified;
			}
			set
			{
				if ((this._StagingLastModified != value))
				{
					this.OnStagingLastModifiedChanging(value);
					this.SendPropertyChanging();
					this._StagingLastModified = value;
					this.SendPropertyChanged("StagingLastModified");
					this.OnStagingLastModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StagingLastEditor", DbType="NVarChar(256)")]
		public string StagingLastEditor
		{
			get
			{
				return this._StagingLastEditor;
			}
			set
			{
				if ((this._StagingLastEditor != value))
				{
					this.OnStagingLastEditorChanging(value);
					this.SendPropertyChanging();
					this._StagingLastEditor = value;
					this.SendPropertyChanged("StagingLastEditor");
					this.OnStagingLastEditorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupportCollapsable", DbType="Bit")]
		public System.Nullable<bool> SupportCollapsable
		{
			get
			{
				return this._SupportCollapsable;
			}
			set
			{
				if ((this._SupportCollapsable != value))
				{
					this.OnSupportCollapsableChanging(value);
					this.SendPropertyChanging();
					this._SupportCollapsable = value;
					this.SendPropertyChanged("SupportCollapsable");
					this.OnSupportCollapsableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowEveryWhere", DbType="Bit")]
		public System.Nullable<bool> ShowEveryWhere
		{
			get
			{
				return this._ShowEveryWhere;
			}
			set
			{
				if ((this._ShowEveryWhere != value))
				{
					this.OnShowEveryWhereChanging(value);
					this.SendPropertyChanging();
					this._ShowEveryWhere = value;
					this.SendPropertyChanged("ShowEveryWhere");
					this.OnShowEveryWhereChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthorizedMoveModuleRoles", DbType="NVarChar(256)")]
		public string AuthorizedMoveModuleRoles
		{
			get
			{
				return this._AuthorizedMoveModuleRoles;
			}
			set
			{
				if ((this._AuthorizedMoveModuleRoles != value))
				{
					this.OnAuthorizedMoveModuleRolesChanging(value);
					this.SendPropertyChanging();
					this._AuthorizedMoveModuleRoles = value;
					this.SendPropertyChanged("AuthorizedMoveModuleRoles");
					this.OnAuthorizedMoveModuleRolesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthorizedDeleteModuleRoles", DbType="NVarChar(256)")]
		public string AuthorizedDeleteModuleRoles
		{
			get
			{
				return this._AuthorizedDeleteModuleRoles;
			}
			set
			{
				if ((this._AuthorizedDeleteModuleRoles != value))
				{
					this.OnAuthorizedDeleteModuleRolesChanging(value);
					this.SendPropertyChanging();
					this._AuthorizedDeleteModuleRoles = value;
					this.SendPropertyChanged("AuthorizedDeleteModuleRoles");
					this.OnAuthorizedDeleteModuleRolesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="rb_Modules_rb_ModuleSettings", Storage="_rb_ModuleSettings", ThisKey="ModuleID", OtherKey="ModuleID")]
		public EntitySet<rb_ModuleSettings> rb_ModuleSettings
		{
			get
			{
				return this._rb_ModuleSettings;
			}
			set
			{
				this._rb_ModuleSettings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="rb_Pages_rb_Modules", Storage="_rb_Page", ThisKey="TabID", OtherKey="PageID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public rb_Pages rb_Pages
		{
			get
			{
				return this._rb_Page.Entity;
			}
			set
			{
				rb_Pages previousValue = this._rb_Page.Entity;
				if (((previousValue != value) 
							|| (this._rb_Page.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._rb_Page.Entity = null;
						previousValue.rb_Modules.Remove(this);
					}
					this._rb_Page.Entity = value;
					if ((value != null))
					{
						value.rb_Modules.Add(this);
						this._TabID = value.PageID;
					}
					else
					{
						this._TabID = default(int);
					}
					this.SendPropertyChanged("rb_Pages");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="rb_ModuleDefinition_rb_Modules", Storage="_rb_ModuleDefinition", ThisKey="ModuleDefID", OtherKey="ModuleDefID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public rb_ModuleDefinition rb_ModuleDefinition
		{
			get
			{
				return this._rb_ModuleDefinition.Entity;
			}
			set
			{
				rb_ModuleDefinition previousValue = this._rb_ModuleDefinition.Entity;
				if (((previousValue != value) 
							|| (this._rb_ModuleDefinition.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._rb_ModuleDefinition.Entity = null;
						previousValue.rb_Modules.Remove(this);
					}
					this._rb_ModuleDefinition.Entity = value;
					if ((value != null))
					{
						value.rb_Modules.Add(this);
						this._ModuleDefID = value.ModuleDefID;
					}
					else
					{
						this._ModuleDefID = default(int);
					}
					this.SendPropertyChanged("rb_ModuleDefinition");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_rb_ModuleSettings(rb_ModuleSettings entity)
		{
			this.SendPropertyChanging();
			entity.rb_Modules = this;
		}
		
		private void detach_rb_ModuleSettings(rb_ModuleSettings entity)
		{
			this.SendPropertyChanging();
			entity.rb_Modules = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.rb_Pages")]
	public partial class rb_Pages : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PageID;
		
		private System.Nullable<int> _ParentPageID;
		
		private int _PageOrder;
		
		private int _PortalID;
		
		private string _PageName;
		
		private string _MobilePageName;
		
		private string _AuthorizedRoles;
		
		private bool _ShowMobile;
		
		private System.Nullable<int> _PageLayout;
		
		private string _PageDescription;
		
		private EntitySet<rb_Modules> _rb_Modules;
		
		private EntitySet<rb_Pages> _rb_Pages;
		
		private EntitySet<rb_TabSetting> _rb_TabSettings;
		
		private EntityRef<rb_Pages> _rb_Page1;
		
		private EntityRef<rb_Portals> _rb_Portal;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPageIDChanging(int value);
    partial void OnPageIDChanged();
    partial void OnParentPageIDChanging(System.Nullable<int> value);
    partial void OnParentPageIDChanged();
    partial void OnPageOrderChanging(int value);
    partial void OnPageOrderChanged();
    partial void OnPortalIDChanging(int value);
    partial void OnPortalIDChanged();
    partial void OnPageNameChanging(string value);
    partial void OnPageNameChanged();
    partial void OnMobilePageNameChanging(string value);
    partial void OnMobilePageNameChanged();
    partial void OnAuthorizedRolesChanging(string value);
    partial void OnAuthorizedRolesChanged();
    partial void OnShowMobileChanging(bool value);
    partial void OnShowMobileChanged();
    partial void OnPageLayoutChanging(System.Nullable<int> value);
    partial void OnPageLayoutChanged();
    partial void OnPageDescriptionChanging(string value);
    partial void OnPageDescriptionChanged();
    #endregion
		
		public rb_Pages()
		{
			this._rb_Modules = new EntitySet<rb_Modules>(new Action<rb_Modules>(this.attach_rb_Modules), new Action<rb_Modules>(this.detach_rb_Modules));
			this._rb_Pages = new EntitySet<rb_Pages>(new Action<rb_Pages>(this.attach_rb_Pages), new Action<rb_Pages>(this.detach_rb_Pages));
			this._rb_TabSettings = new EntitySet<rb_TabSetting>(new Action<rb_TabSetting>(this.attach_rb_TabSettings), new Action<rb_TabSetting>(this.detach_rb_TabSettings));
			this._rb_Page1 = default(EntityRef<rb_Pages>);
			this._rb_Portal = default(EntityRef<rb_Portals>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PageID
		{
			get
			{
				return this._PageID;
			}
			set
			{
				if ((this._PageID != value))
				{
					this.OnPageIDChanging(value);
					this.SendPropertyChanging();
					this._PageID = value;
					this.SendPropertyChanged("PageID");
					this.OnPageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentPageID", DbType="Int")]
		public System.Nullable<int> ParentPageID
		{
			get
			{
				return this._ParentPageID;
			}
			set
			{
				if ((this._ParentPageID != value))
				{
					if (this._rb_Page1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentPageIDChanging(value);
					this.SendPropertyChanging();
					this._ParentPageID = value;
					this.SendPropertyChanged("ParentPageID");
					this.OnParentPageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageOrder", DbType="Int NOT NULL")]
		public int PageOrder
		{
			get
			{
				return this._PageOrder;
			}
			set
			{
				if ((this._PageOrder != value))
				{
					this.OnPageOrderChanging(value);
					this.SendPropertyChanging();
					this._PageOrder = value;
					this.SendPropertyChanged("PageOrder");
					this.OnPageOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortalID", DbType="Int NOT NULL")]
		public int PortalID
		{
			get
			{
				return this._PortalID;
			}
			set
			{
				if ((this._PortalID != value))
				{
					if (this._rb_Portal.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPortalIDChanging(value);
					this.SendPropertyChanging();
					this._PortalID = value;
					this.SendPropertyChanged("PortalID");
					this.OnPortalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string PageName
		{
			get
			{
				return this._PageName;
			}
			set
			{
				if ((this._PageName != value))
				{
					this.OnPageNameChanging(value);
					this.SendPropertyChanging();
					this._PageName = value;
					this.SendPropertyChanged("PageName");
					this.OnPageNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobilePageName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string MobilePageName
		{
			get
			{
				return this._MobilePageName;
			}
			set
			{
				if ((this._MobilePageName != value))
				{
					this.OnMobilePageNameChanging(value);
					this.SendPropertyChanging();
					this._MobilePageName = value;
					this.SendPropertyChanged("MobilePageName");
					this.OnMobilePageNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthorizedRoles", DbType="NVarChar(512)")]
		public string AuthorizedRoles
		{
			get
			{
				return this._AuthorizedRoles;
			}
			set
			{
				if ((this._AuthorizedRoles != value))
				{
					this.OnAuthorizedRolesChanging(value);
					this.SendPropertyChanging();
					this._AuthorizedRoles = value;
					this.SendPropertyChanged("AuthorizedRoles");
					this.OnAuthorizedRolesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowMobile", DbType="Bit NOT NULL")]
		public bool ShowMobile
		{
			get
			{
				return this._ShowMobile;
			}
			set
			{
				if ((this._ShowMobile != value))
				{
					this.OnShowMobileChanging(value);
					this.SendPropertyChanging();
					this._ShowMobile = value;
					this.SendPropertyChanged("ShowMobile");
					this.OnShowMobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageLayout", DbType="Int")]
		public System.Nullable<int> PageLayout
		{
			get
			{
				return this._PageLayout;
			}
			set
			{
				if ((this._PageLayout != value))
				{
					this.OnPageLayoutChanging(value);
					this.SendPropertyChanging();
					this._PageLayout = value;
					this.SendPropertyChanged("PageLayout");
					this.OnPageLayoutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageDescription", DbType="NVarChar(512) NOT NULL", CanBeNull=false)]
		public string PageDescription
		{
			get
			{
				return this._PageDescription;
			}
			set
			{
				if ((this._PageDescription != value))
				{
					this.OnPageDescriptionChanging(value);
					this.SendPropertyChanging();
					this._PageDescription = value;
					this.SendPropertyChanged("PageDescription");
					this.OnPageDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="rb_Pages_rb_Modules", Storage="_rb_Modules", ThisKey="PageID", OtherKey="TabID")]
		public EntitySet<rb_Modules> rb_Modules
		{
			get
			{
				return this._rb_Modules;
			}
			set
			{
				this._rb_Modules.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="rb_Pages_rb_Pages", Storage="_rb_Pages", ThisKey="PageID", OtherKey="ParentPageID")]
		public EntitySet<rb_Pages> rb_Pages1
		{
			get
			{
				return this._rb_Pages;
			}
			set
			{
				this._rb_Pages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="rb_Pages_rb_TabSetting", Storage="_rb_TabSettings", ThisKey="PageID", OtherKey="TabID")]
		public EntitySet<rb_TabSetting> rb_TabSettings
		{
			get
			{
				return this._rb_TabSettings;
			}
			set
			{
				this._rb_TabSettings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="rb_Pages_rb_Pages", Storage="_rb_Page1", ThisKey="ParentPageID", OtherKey="PageID", IsForeignKey=true)]
		public rb_Pages rb_Page1
		{
			get
			{
				return this._rb_Page1.Entity;
			}
			set
			{
				rb_Pages previousValue = this._rb_Page1.Entity;
				if (((previousValue != value) 
							|| (this._rb_Page1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._rb_Page1.Entity = null;
						previousValue.rb_Pages1.Remove(this);
					}
					this._rb_Page1.Entity = value;
					if ((value != null))
					{
						value.rb_Pages1.Add(this);
						this._ParentPageID = value.PageID;
					}
					else
					{
						this._ParentPageID = default(Nullable<int>);
					}
					this.SendPropertyChanged("rb_Page1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="rb_Portals_rb_Pages", Storage="_rb_Portal", ThisKey="PortalID", OtherKey="PortalID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public rb_Portals rb_Portals
		{
			get
			{
				return this._rb_Portal.Entity;
			}
			set
			{
				rb_Portals previousValue = this._rb_Portal.Entity;
				if (((previousValue != value) 
							|| (this._rb_Portal.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._rb_Portal.Entity = null;
						previousValue.rb_Pages.Remove(this);
					}
					this._rb_Portal.Entity = value;
					if ((value != null))
					{
						value.rb_Pages.Add(this);
						this._PortalID = value.PortalID;
					}
					else
					{
						this._PortalID = default(int);
					}
					this.SendPropertyChanged("rb_Portals");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_rb_Modules(rb_Modules entity)
		{
			this.SendPropertyChanging();
			entity.rb_Pages = this;
		}
		
		private void detach_rb_Modules(rb_Modules entity)
		{
			this.SendPropertyChanging();
			entity.rb_Pages = null;
		}
		
		private void attach_rb_Pages(rb_Pages entity)
		{
			this.SendPropertyChanging();
			entity.rb_Page1 = this;
		}
		
		private void detach_rb_Pages(rb_Pages entity)
		{
			this.SendPropertyChanging();
			entity.rb_Page1 = null;
		}
		
		private void attach_rb_TabSettings(rb_TabSetting entity)
		{
			this.SendPropertyChanging();
			entity.rb_Pages = this;
		}
		
		private void detach_rb_TabSettings(rb_TabSetting entity)
		{
			this.SendPropertyChanging();
			entity.rb_Pages = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.rb_ModuleSettings")]
	public partial class rb_ModuleSettings : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ModuleID;
		
		private string _SettingName;
		
		private string _SettingValue;
		
		private EntityRef<rb_Modules> _rb_Module;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnModuleIDChanging(int value);
    partial void OnModuleIDChanged();
    partial void OnSettingNameChanging(string value);
    partial void OnSettingNameChanged();
    partial void OnSettingValueChanging(string value);
    partial void OnSettingValueChanged();
    #endregion
		
		public rb_ModuleSettings()
		{
			this._rb_Module = default(EntityRef<rb_Modules>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModuleID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ModuleID
		{
			get
			{
				return this._ModuleID;
			}
			set
			{
				if ((this._ModuleID != value))
				{
					if (this._rb_Module.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnModuleIDChanging(value);
					this.SendPropertyChanging();
					this._ModuleID = value;
					this.SendPropertyChanged("ModuleID");
					this.OnModuleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SettingName", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SettingName
		{
			get
			{
				return this._SettingName;
			}
			set
			{
				if ((this._SettingName != value))
				{
					this.OnSettingNameChanging(value);
					this.SendPropertyChanging();
					this._SettingName = value;
					this.SendPropertyChanged("SettingName");
					this.OnSettingNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SettingValue", DbType="NVarChar(1500) NOT NULL", CanBeNull=false)]
		public string SettingValue
		{
			get
			{
				return this._SettingValue;
			}
			set
			{
				if ((this._SettingValue != value))
				{
					this.OnSettingValueChanging(value);
					this.SendPropertyChanging();
					this._SettingValue = value;
					this.SendPropertyChanged("SettingValue");
					this.OnSettingValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="rb_Modules_rb_ModuleSettings", Storage="_rb_Module", ThisKey="ModuleID", OtherKey="ModuleID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public rb_Modules rb_Modules
		{
			get
			{
				return this._rb_Module.Entity;
			}
			set
			{
				rb_Modules previousValue = this._rb_Module.Entity;
				if (((previousValue != value) 
							|| (this._rb_Module.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._rb_Module.Entity = null;
						previousValue.rb_ModuleSettings.Remove(this);
					}
					this._rb_Module.Entity = value;
					if ((value != null))
					{
						value.rb_ModuleSettings.Add(this);
						this._ModuleID = value.ModuleID;
					}
					else
					{
						this._ModuleID = default(int);
					}
					this.SendPropertyChanged("rb_Modules");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.rb_PortalSettings")]
	public partial class rb_PortalSettings : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PortalID;
		
		private string _SettingName;
		
		private string _SettingValue;
		
		private EntityRef<rb_Portals> _rb_Portal;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPortalIDChanging(int value);
    partial void OnPortalIDChanged();
    partial void OnSettingNameChanging(string value);
    partial void OnSettingNameChanged();
    partial void OnSettingValueChanging(string value);
    partial void OnSettingValueChanged();
    #endregion
		
		public rb_PortalSettings()
		{
			this._rb_Portal = default(EntityRef<rb_Portals>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortalID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PortalID
		{
			get
			{
				return this._PortalID;
			}
			set
			{
				if ((this._PortalID != value))
				{
					if (this._rb_Portal.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPortalIDChanging(value);
					this.SendPropertyChanging();
					this._PortalID = value;
					this.SendPropertyChanged("PortalID");
					this.OnPortalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SettingName", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SettingName
		{
			get
			{
				return this._SettingName;
			}
			set
			{
				if ((this._SettingName != value))
				{
					this.OnSettingNameChanging(value);
					this.SendPropertyChanging();
					this._SettingName = value;
					this.SendPropertyChanged("SettingName");
					this.OnSettingNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SettingValue", DbType="NVarChar(1500) NOT NULL", CanBeNull=false)]
		public string SettingValue
		{
			get
			{
				return this._SettingValue;
			}
			set
			{
				if ((this._SettingValue != value))
				{
					this.OnSettingValueChanging(value);
					this.SendPropertyChanging();
					this._SettingValue = value;
					this.SendPropertyChanged("SettingValue");
					this.OnSettingValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="rb_Portals_rb_PortalSettings", Storage="_rb_Portal", ThisKey="PortalID", OtherKey="PortalID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public rb_Portals rb_Portals
		{
			get
			{
				return this._rb_Portal.Entity;
			}
			set
			{
				rb_Portals previousValue = this._rb_Portal.Entity;
				if (((previousValue != value) 
							|| (this._rb_Portal.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._rb_Portal.Entity = null;
						previousValue.rb_PortalSettings.Remove(this);
					}
					this._rb_Portal.Entity = value;
					if ((value != null))
					{
						value.rb_PortalSettings.Add(this);
						this._PortalID = value.PortalID;
					}
					else
					{
						this._PortalID = default(int);
					}
					this.SendPropertyChanged("rb_Portals");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.rb_TabSettings")]
	public partial class rb_TabSetting : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TabID;
		
		private string _SettingName;
		
		private string _SettingValue;
		
		private EntityRef<rb_Pages> _rb_Pages;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTabIDChanging(int value);
    partial void OnTabIDChanged();
    partial void OnSettingNameChanging(string value);
    partial void OnSettingNameChanged();
    partial void OnSettingValueChanging(string value);
    partial void OnSettingValueChanged();
    #endregion
		
		public rb_TabSetting()
		{
			this._rb_Pages = default(EntityRef<rb_Pages>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TabID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int TabID
		{
			get
			{
				return this._TabID;
			}
			set
			{
				if ((this._TabID != value))
				{
					if (this._rb_Pages.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTabIDChanging(value);
					this.SendPropertyChanging();
					this._TabID = value;
					this.SendPropertyChanged("TabID");
					this.OnTabIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SettingName", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SettingName
		{
			get
			{
				return this._SettingName;
			}
			set
			{
				if ((this._SettingName != value))
				{
					this.OnSettingNameChanging(value);
					this.SendPropertyChanging();
					this._SettingName = value;
					this.SendPropertyChanged("SettingName");
					this.OnSettingNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SettingValue", DbType="NVarChar(1500) NOT NULL", CanBeNull=false)]
		public string SettingValue
		{
			get
			{
				return this._SettingValue;
			}
			set
			{
				if ((this._SettingValue != value))
				{
					this.OnSettingValueChanging(value);
					this.SendPropertyChanging();
					this._SettingValue = value;
					this.SendPropertyChanged("SettingValue");
					this.OnSettingValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="rb_Pages_rb_TabSetting", Storage="_rb_Pages", ThisKey="TabID", OtherKey="PageID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public rb_Pages rb_Pages
		{
			get
			{
				return this._rb_Pages.Entity;
			}
			set
			{
				rb_Pages previousValue = this._rb_Pages.Entity;
				if (((previousValue != value) 
							|| (this._rb_Pages.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._rb_Pages.Entity = null;
						previousValue.rb_TabSettings.Remove(this);
					}
					this._rb_Pages.Entity = value;
					if ((value != null))
					{
						value.rb_TabSettings.Add(this);
						this._TabID = value.PageID;
					}
					else
					{
						this._TabID = default(int);
					}
					this.SendPropertyChanged("rb_Pages");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.rb_HtmlText")]
	public partial class rb_HtmlText : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ModuleID;
		
		private string _DesktopHtml;
		
		private string _MobileSummary;
		
		private string _MobileDetails;
		
		private string _CWCSS;
		
		private string _CWJS;
		
		private string _CWHTML;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnModuleIDChanging(int value);
    partial void OnModuleIDChanged();
    partial void OnDesktopHtmlChanging(string value);
    partial void OnDesktopHtmlChanged();
    partial void OnMobileSummaryChanging(string value);
    partial void OnMobileSummaryChanged();
    partial void OnMobileDetailsChanging(string value);
    partial void OnMobileDetailsChanged();
    partial void OnCWCSSChanging(string value);
    partial void OnCWCSSChanged();
    partial void OnCWJSChanging(string value);
    partial void OnCWJSChanged();
    partial void OnCWHTMLChanging(string value);
    partial void OnCWHTMLChanged();
    #endregion
		
		public rb_HtmlText()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModuleID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ModuleID
		{
			get
			{
				return this._ModuleID;
			}
			set
			{
				if ((this._ModuleID != value))
				{
					this.OnModuleIDChanging(value);
					this.SendPropertyChanging();
					this._ModuleID = value;
					this.SendPropertyChanged("ModuleID");
					this.OnModuleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DesktopHtml", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string DesktopHtml
		{
			get
			{
				return this._DesktopHtml;
			}
			set
			{
				if ((this._DesktopHtml != value))
				{
					this.OnDesktopHtmlChanging(value);
					this.SendPropertyChanging();
					this._DesktopHtml = value;
					this.SendPropertyChanged("DesktopHtml");
					this.OnDesktopHtmlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileSummary", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string MobileSummary
		{
			get
			{
				return this._MobileSummary;
			}
			set
			{
				if ((this._MobileSummary != value))
				{
					this.OnMobileSummaryChanging(value);
					this.SendPropertyChanging();
					this._MobileSummary = value;
					this.SendPropertyChanged("MobileSummary");
					this.OnMobileSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileDetails", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string MobileDetails
		{
			get
			{
				return this._MobileDetails;
			}
			set
			{
				if ((this._MobileDetails != value))
				{
					this.OnMobileDetailsChanging(value);
					this.SendPropertyChanging();
					this._MobileDetails = value;
					this.SendPropertyChanged("MobileDetails");
					this.OnMobileDetailsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CWCSS", DbType="NText", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string CWCSS
		{
			get
			{
				return this._CWCSS;
			}
			set
			{
				if ((this._CWCSS != value))
				{
					this.OnCWCSSChanging(value);
					this.SendPropertyChanging();
					this._CWCSS = value;
					this.SendPropertyChanged("CWCSS");
					this.OnCWCSSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CWJS", DbType="NText", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string CWJS
		{
			get
			{
				return this._CWJS;
			}
			set
			{
				if ((this._CWJS != value))
				{
					this.OnCWJSChanging(value);
					this.SendPropertyChanging();
					this._CWJS = value;
					this.SendPropertyChanged("CWJS");
					this.OnCWJSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CWHTML", DbType="NText", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string CWHTML
		{
			get
			{
				return this._CWHTML;
			}
			set
			{
				if ((this._CWHTML != value))
				{
					this.OnCWHTMLChanging(value);
					this.SendPropertyChanging();
					this._CWHTML = value;
					this.SendPropertyChanged("CWHTML");
					this.OnCWHTMLChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.rb_ModuleDefinitions")]
	public partial class rb_ModuleDefinition : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ModuleDefID;
		
		private int _PortalID;
		
		private System.Guid _GeneralModDefID;
		
		private EntitySet<rb_Modules> _rb_Modules;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnModuleDefIDChanging(int value);
    partial void OnModuleDefIDChanged();
    partial void OnPortalIDChanging(int value);
    partial void OnPortalIDChanged();
    partial void OnGeneralModDefIDChanging(System.Guid value);
    partial void OnGeneralModDefIDChanged();
    #endregion
		
		public rb_ModuleDefinition()
		{
			this._rb_Modules = new EntitySet<rb_Modules>(new Action<rb_Modules>(this.attach_rb_Modules), new Action<rb_Modules>(this.detach_rb_Modules));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModuleDefID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ModuleDefID
		{
			get
			{
				return this._ModuleDefID;
			}
			set
			{
				if ((this._ModuleDefID != value))
				{
					this.OnModuleDefIDChanging(value);
					this.SendPropertyChanging();
					this._ModuleDefID = value;
					this.SendPropertyChanged("ModuleDefID");
					this.OnModuleDefIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortalID", DbType="Int NOT NULL")]
		public int PortalID
		{
			get
			{
				return this._PortalID;
			}
			set
			{
				if ((this._PortalID != value))
				{
					this.OnPortalIDChanging(value);
					this.SendPropertyChanging();
					this._PortalID = value;
					this.SendPropertyChanged("PortalID");
					this.OnPortalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GeneralModDefID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid GeneralModDefID
		{
			get
			{
				return this._GeneralModDefID;
			}
			set
			{
				if ((this._GeneralModDefID != value))
				{
					this.OnGeneralModDefIDChanging(value);
					this.SendPropertyChanging();
					this._GeneralModDefID = value;
					this.SendPropertyChanged("GeneralModDefID");
					this.OnGeneralModDefIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="rb_ModuleDefinition_rb_Modules", Storage="_rb_Modules", ThisKey="ModuleDefID", OtherKey="ModuleDefID")]
		public EntitySet<rb_Modules> rb_Modules
		{
			get
			{
				return this._rb_Modules;
			}
			set
			{
				this._rb_Modules.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_rb_Modules(rb_Modules entity)
		{
			this.SendPropertyChanging();
			entity.rb_ModuleDefinition = this;
		}
		
		private void detach_rb_Modules(rb_Modules entity)
		{
			this.SendPropertyChanging();
			entity.rb_ModuleDefinition = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.rb_GeneralModuleDefinitions")]
	public partial class rb_GeneralModuleDefinition : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _GeneralModDefID;
		
		private string _FriendlyName;
		
		private string _DesktopSrc;
		
		private string _MobileSrc;
		
		private string _AssemblyName;
		
		private string _ClassName;
		
		private System.Nullable<bool> _Admin;
		
		private System.Nullable<bool> _Searchable;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGeneralModDefIDChanging(System.Guid value);
    partial void OnGeneralModDefIDChanged();
    partial void OnFriendlyNameChanging(string value);
    partial void OnFriendlyNameChanged();
    partial void OnDesktopSrcChanging(string value);
    partial void OnDesktopSrcChanged();
    partial void OnMobileSrcChanging(string value);
    partial void OnMobileSrcChanged();
    partial void OnAssemblyNameChanging(string value);
    partial void OnAssemblyNameChanged();
    partial void OnClassNameChanging(string value);
    partial void OnClassNameChanged();
    partial void OnAdminChanging(System.Nullable<bool> value);
    partial void OnAdminChanged();
    partial void OnSearchableChanging(System.Nullable<bool> value);
    partial void OnSearchableChanged();
    #endregion
		
		public rb_GeneralModuleDefinition()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GeneralModDefID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid GeneralModDefID
		{
			get
			{
				return this._GeneralModDefID;
			}
			set
			{
				if ((this._GeneralModDefID != value))
				{
					this.OnGeneralModDefIDChanging(value);
					this.SendPropertyChanging();
					this._GeneralModDefID = value;
					this.SendPropertyChanged("GeneralModDefID");
					this.OnGeneralModDefIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FriendlyName", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string FriendlyName
		{
			get
			{
				return this._FriendlyName;
			}
			set
			{
				if ((this._FriendlyName != value))
				{
					this.OnFriendlyNameChanging(value);
					this.SendPropertyChanging();
					this._FriendlyName = value;
					this.SendPropertyChanged("FriendlyName");
					this.OnFriendlyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DesktopSrc", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string DesktopSrc
		{
			get
			{
				return this._DesktopSrc;
			}
			set
			{
				if ((this._DesktopSrc != value))
				{
					this.OnDesktopSrcChanging(value);
					this.SendPropertyChanging();
					this._DesktopSrc = value;
					this.SendPropertyChanged("DesktopSrc");
					this.OnDesktopSrcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileSrc", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string MobileSrc
		{
			get
			{
				return this._MobileSrc;
			}
			set
			{
				if ((this._MobileSrc != value))
				{
					this.OnMobileSrcChanging(value);
					this.SendPropertyChanging();
					this._MobileSrc = value;
					this.SendPropertyChanged("MobileSrc");
					this.OnMobileSrcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssemblyName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AssemblyName
		{
			get
			{
				return this._AssemblyName;
			}
			set
			{
				if ((this._AssemblyName != value))
				{
					this.OnAssemblyNameChanging(value);
					this.SendPropertyChanging();
					this._AssemblyName = value;
					this.SendPropertyChanged("AssemblyName");
					this.OnAssemblyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassName", DbType="NVarChar(128)")]
		public string ClassName
		{
			get
			{
				return this._ClassName;
			}
			set
			{
				if ((this._ClassName != value))
				{
					this.OnClassNameChanging(value);
					this.SendPropertyChanging();
					this._ClassName = value;
					this.SendPropertyChanged("ClassName");
					this.OnClassNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Admin", DbType="Bit")]
		public System.Nullable<bool> Admin
		{
			get
			{
				return this._Admin;
			}
			set
			{
				if ((this._Admin != value))
				{
					this.OnAdminChanging(value);
					this.SendPropertyChanging();
					this._Admin = value;
					this.SendPropertyChanged("Admin");
					this.OnAdminChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Searchable", DbType="Bit")]
		public System.Nullable<bool> Searchable
		{
			get
			{
				return this._Searchable;
			}
			set
			{
				if ((this._Searchable != value))
				{
					this.OnSearchableChanging(value);
					this.SendPropertyChanging();
					this._Searchable = value;
					this.SendPropertyChanged("Searchable");
					this.OnSearchableChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.rb_HtmlText_st")]
	public partial class rb_HtmlText_st : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ModuleID;
		
		private string _DesktopHtml;
		
		private string _MobileSummary;
		
		private string _MobileDetails;
		
		private string _CWCSS;
		
		private string _CWJS;
		
		private string _CWHTML;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnModuleIDChanging(int value);
    partial void OnModuleIDChanged();
    partial void OnDesktopHtmlChanging(string value);
    partial void OnDesktopHtmlChanged();
    partial void OnMobileSummaryChanging(string value);
    partial void OnMobileSummaryChanged();
    partial void OnMobileDetailsChanging(string value);
    partial void OnMobileDetailsChanged();
    partial void OnCWCSSChanging(string value);
    partial void OnCWCSSChanged();
    partial void OnCWJSChanging(string value);
    partial void OnCWJSChanged();
    partial void OnCWHTMLChanging(string value);
    partial void OnCWHTMLChanged();
    #endregion
		
		public rb_HtmlText_st()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModuleID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ModuleID
		{
			get
			{
				return this._ModuleID;
			}
			set
			{
				if ((this._ModuleID != value))
				{
					this.OnModuleIDChanging(value);
					this.SendPropertyChanging();
					this._ModuleID = value;
					this.SendPropertyChanged("ModuleID");
					this.OnModuleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DesktopHtml", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string DesktopHtml
		{
			get
			{
				return this._DesktopHtml;
			}
			set
			{
				if ((this._DesktopHtml != value))
				{
					this.OnDesktopHtmlChanging(value);
					this.SendPropertyChanging();
					this._DesktopHtml = value;
					this.SendPropertyChanged("DesktopHtml");
					this.OnDesktopHtmlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileSummary", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string MobileSummary
		{
			get
			{
				return this._MobileSummary;
			}
			set
			{
				if ((this._MobileSummary != value))
				{
					this.OnMobileSummaryChanging(value);
					this.SendPropertyChanging();
					this._MobileSummary = value;
					this.SendPropertyChanged("MobileSummary");
					this.OnMobileSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileDetails", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string MobileDetails
		{
			get
			{
				return this._MobileDetails;
			}
			set
			{
				if ((this._MobileDetails != value))
				{
					this.OnMobileDetailsChanging(value);
					this.SendPropertyChanging();
					this._MobileDetails = value;
					this.SendPropertyChanged("MobileDetails");
					this.OnMobileDetailsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CWCSS", DbType="NText", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string CWCSS
		{
			get
			{
				return this._CWCSS;
			}
			set
			{
				if ((this._CWCSS != value))
				{
					this.OnCWCSSChanging(value);
					this.SendPropertyChanging();
					this._CWCSS = value;
					this.SendPropertyChanged("CWCSS");
					this.OnCWCSSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CWJS", DbType="NText", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string CWJS
		{
			get
			{
				return this._CWJS;
			}
			set
			{
				if ((this._CWJS != value))
				{
					this.OnCWJSChanging(value);
					this.SendPropertyChanging();
					this._CWJS = value;
					this.SendPropertyChanged("CWJS");
					this.OnCWJSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CWHTML", DbType="NText", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string CWHTML
		{
			get
			{
				return this._CWHTML;
			}
			set
			{
				if ((this._CWHTML != value))
				{
					this.OnCWHTMLChanging(value);
					this.SendPropertyChanging();
					this._CWHTML = value;
					this.SendPropertyChanged("CWHTML");
					this.OnCWHTMLChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
